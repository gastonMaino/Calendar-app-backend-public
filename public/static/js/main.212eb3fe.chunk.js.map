{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiRedeucer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/transformDateEvents.js","actions/events.js","actions/auth.js","hooks/useForm/useForm.js","components/auth/LoginScreen.js","helpers/validators.js","components/ui/NavBar.js","components/calendar/CalendarEvent.js","components/modal/Modal.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","id","filter","auth","composeEnhancers","compose","store","createStore","applyMiddleware","Thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","transformDateEvents","event","end","moment","toDate","start","eventLoaded","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","handleInputChange","target","name","value","reset","newFormState","Rname","Remail","Rpassword","LoginScreen","useDispatch","valueError","setValueError","lemail","lpassword","valuesLogin","handleLoginInputChange","rname","remail","rpassword","rpassword2","valuesRegister","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","htmlFor","placeholder","onChange","length","test","NavBar","useSelector","onClick","CalendarEvent","title","Modal","children","isOpen","closeModal","stopPropagation","uiOpenModal","now","minutes","seconds","add","endHour","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","validTitle","setValidTitle","useEffect","momentStart","momentEnd","isSameOrAfter","trim","getState","_id","eventStarAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","startDate","endDate","isSelected","style","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.212eb3fe.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[UI] OPEN MODAL',\r\n    uiCloseModal: '[UI] CLOSE MODAL',\r\n\r\n    eventSetActive: '[EVENT] SET ACTIVE',\r\n    eventAddNew: '[EVENT] ADD NEW',\r\n    eventClearActiveEvent: '[EVENT] CLEAR ACTIVE EVENT',\r\n    eventUpdated: '[EVENT] EVENT UPDATE',\r\n    eventDeleted: '[EVENT] EVENT DELETED',\r\n    eventLoaded: '[EVENT] EVENT LOADED',\r\n    eventLogout: '[EVENT] EVENT LOGOUT',\r\n\r\n    authCheckingFinish: '[AUTH] FINISH CHECKING LOGIN STATE',\r\n    authStartLogin: '[AUTH] START LOGIN',\r\n    authLogin: '[AUTH] LOGIN',\r\n    authStartRegister: '[AUTH] START REGISTER',\r\n    authStartTokenRenew: '[AUTH] START TOKEN RENEW',\r\n    authLogout: '[AUTH] LOGOUT'\r\n\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish: \r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'birthday chief',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'gaston'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map((events) => events.id === action.payload.id ? action.payload : events)\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter((events) => events.id !== state.activeEvent.id),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n\r\n}\r\n\r\nexport const uiRedeucer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiRedeucer } from \"./uiRedeucer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiRedeucer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport Thunk from 'redux-thunk'\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (process.env.NODE_ENV === \"development\"\r\n&& typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(Thunk)))","const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url)\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`\r\n    const token = localStorage.getItem('token') || ''\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        })\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}","import moment from \"moment\";\r\n\r\nexport const transformDateEvents = (events = []) => events.map((event) => ({\r\n    ...event,\r\n    end: moment(event.end).toDate(),\r\n    start: moment(event.start).toDate()\r\n}))","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { transformDateEvents } from \"../helpers/transformDateEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStarAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST')\r\n            const body = await resp.json()\r\n\r\n            if (body.ok) {\r\n                event.id = body.event.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n\r\n                dispatch(eventAddNew(event))\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            Swal.fire('Error', 'There was an error, try again later', 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken('events')\r\n            const body = await resp.json()\r\n\r\n            const events = transformDateEvents(body.events)\r\n\r\n            if (body.ok) {\r\n                dispatch(eventLoaded(events))\r\n            }\r\n\r\n        } catch (err) {\r\n            Swal.fire('Error', 'There was an error, try again later', 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT')\r\n            const body = await resp.json()\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event))\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            Swal.fire('Error', 'There was an error, try again later', 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent\r\n\r\n        try {\r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE')\r\n            const body = await resp.json()\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted())\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            Swal.fire('Error', 'There was an error, try again later', 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventLogout = () => ({type: types.eventLogout}) \r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent,\r\n\r\n})\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n","import Swal from \"sweetalert2\"\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\nimport { eventLogout } from \"./events\"\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithoutToken('auth', { email, password }, 'POST')\r\n        const body = await resp.json()\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithoutToken('auth/register', { email, password, name }, 'POST')\r\n        const body = await resp.json()\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    \r\n    return async (dispatch) => {\r\n        const resp = await fetchWithToken('auth/renew')\r\n        const body = await resp.json()\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear()\r\n        dispatch(eventLogout())\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const reset = ( newFormState = initialState ) =>{\r\n        setValues(newFormState)\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startLogin, startRegister } from '../../actions/auth'\r\nimport { validateEmail, validatePasswordModerate } from '../../helpers/validators'\r\nimport { useForm } from '../../hooks/useForm/useForm'\r\n\r\nconst initialState = {\r\n    Rname: false,\r\n    Remail: false,\r\n    Rpassword: false\r\n}\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const [valueError, setValueError] = useState(initialState)\r\n\r\n    const [valuesLogin, handleLoginInputChange] = useForm({\r\n        lemail: '',\r\n        lpassword: ''\r\n    })\r\n    const [valuesRegister, handleRegisterInputChange] = useForm({\r\n        rname: '',\r\n        remail: '',\r\n        rpassword: '',\r\n        rpassword2: ''\r\n    })\r\n\r\n    const { lemail, lpassword } = valuesLogin\r\n    const { rname, remail, rpassword, rpassword2 } = valuesRegister\r\n    const { Rname, Remail, Rpassword} = valueError\r\n\r\n    const isValid = () => {\r\n        if (rname.length < 2) {\r\n            setValueError({\r\n                ...initialState,\r\n                Rname: true\r\n            })\r\n            return false\r\n        } else if (validateEmail(remail)) {\r\n            setValueError({\r\n                ...initialState,\r\n                Remail: true\r\n            })\r\n\r\n            return false\r\n        } else if (validatePasswordModerate(rpassword) || rpassword !== rpassword2) {\r\n            setValueError({\r\n                ...initialState,\r\n                Rpassword: true\r\n            })\r\n\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(startLogin(lemail, lpassword))\r\n    }\r\n    \r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        if(isValid()){\r\n            dispatch(startRegister(remail, rpassword, rname))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <article className='auth__article'>\r\n            <h1 className='auth__article-title'>Calendar</h1>\r\n            <div className='auth__container'>\r\n                <section className='auth__login' >\r\n                    <h2 className='auth__login-title' >Login</h2>\r\n                    <form\r\n                        onSubmit={handleLogin}\r\n                        className='auth__login-form'\r\n                    >\r\n                        <div className='auth__login-email'>\r\n                            <label htmlFor='email' >Email</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Email'\r\n                                id='email'\r\n                                name='lemail'\r\n                                value={lemail}\r\n                                onChange={handleLoginInputChange}\r\n                                className='auth__input'\r\n                            />\r\n                        </div>\r\n                        <div className='auth__login-password'>\r\n                            <label htmlFor='password' >Password</label>\r\n                            <input\r\n                                type='password'\r\n                                placeholder='password'\r\n                                id='password'\r\n                                name='lpassword'\r\n                                value={lpassword}\r\n                                onChange={handleLoginInputChange}\r\n                                className='auth__input'\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            value='login'\r\n                            type='submit'\r\n                            className='auth__login-btn'\r\n                        >\r\n                            Login\r\n                        </button>\r\n                    </form>\r\n                </section>\r\n                <section className='auth__register'>\r\n                    <h2 className='auth__register-title' >Register</h2>\r\n                    <form\r\n                        className='auth__register-form'\r\n                        onSubmit={handleRegister}\r\n                    >\r\n                        <div className='auth__register-name' >\r\n                            <label htmlFor='name' >Name</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Name'\r\n                                id='name'\r\n                                name='rname'\r\n                                value={rname}\r\n                                onChange={handleRegisterInputChange}\r\n                                className={`auth__register-input ${(Rname) && 'auth__register-input-danger'}`}\r\n                            />\r\n                        </div>\r\n                        <div className='auth__register-email' >\r\n                            <label htmlFor='email' >Email</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Email'\r\n                                id='email'\r\n                                name='remail'\r\n                                value={remail}\r\n                                onChange={handleRegisterInputChange}\r\n                                className={`auth__register-input ${(Remail) && 'auth__register-input-danger'}`}\r\n                            />\r\n                        </div>\r\n                        <div className='auth__register-password' >\r\n                            <label htmlFor='password' >Password</label>\r\n                            <input\r\n                                type='password'\r\n                                placeholder='password'\r\n                                id='password'\r\n                                name='rpassword'\r\n                                value={rpassword}\r\n                                onChange={handleRegisterInputChange}\r\n                                className={`auth__register-input ${(Rpassword) && 'auth__register-input-danger'}`}\r\n                            />\r\n\r\n                            <label htmlFor='password' > Confirm password</label>\r\n                            <input\r\n                                type='password'\r\n                                placeholder='password'\r\n                                id='password'\r\n                                name='rpassword2'\r\n                                value={rpassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                                className={`auth__register-input ${(Rpassword) && 'auth__register-input-danger'}`}\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            value='register'\r\n                            type='submit'\r\n                            className='auth__register-btn'\r\n                        >\r\n                            Register\r\n                        </button>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n","export const validateEmail = (email) => {\r\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n    if(emailRegex.test(email)) return false\r\n    else return true\r\n}\r\n\r\nexport const validatePasswordModerate = (password) => {\r\n    //Should have 1 lowercase letter, 1 uppercase letter, 1 number, and be at least 8 characters long\r\n    const passwordRegex = /(?=(.*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/\r\n    if(passwordRegex.test(password)) return false\r\n    else return true\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    return (\r\n        <header className='ui__header'>\r\n            <div className='ui__header-container' >\r\n                <p className='ui__header-text' >{name}</p>\r\n            </div>\r\n\r\n            <button className='ui__header-btn' onClick={handleLogout} >\r\n                <i className='fas fa-sign-out-alt' ></i>\r\n                <span className='ui__header-span' >Logout</span>\r\n            </button>\r\n\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <p>{title} - <span>{user.name}</span> </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Modal = ({ children, isOpen = false, closeModal }) => {\r\n\r\n    const handleCloseModal = () => {\r\n        closeModal()\r\n    }\r\n\r\n    const handleModalClick = (e) => {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    return (\r\n        <article onClick={handleCloseModal} className={`modal ${isOpen && 'is-open'}`}>\r\n            <div className='modal-container' onClick={handleModalClick}>\r\n                {children}\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nModal.propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    closeModal: PropTypes.func.isRequired\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({type: types.uiOpenModal})\r\n\r\nexport const uiCloseModal = () => ({type: types.uiCloseModal})","import React, { useEffect, useState } from 'react';\r\n// import Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { Modal } from '../modal/Modal';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStarAddNew, eventStartUpdated } from '../../actions/events';\r\n// import { customStyles } from '../../helpers/centerModalStyles';\r\n\r\n// Modal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst endHour = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: endHour.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(endHour.toDate());\r\n    const [validTitle, setValidTitle] = useState(true);\r\n    const [values, setValues] = useState(initEvent)\r\n    const dispatch = useDispatch()\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const { title, notes, start, end } = values;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setValues(activeEvent)\r\n        }else {\r\n            setValues(initEvent)\r\n        }\r\n    }, [activeEvent, setValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setValues(initEvent);\r\n\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setValues({\r\n            ...values,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setValues({\r\n            ...values,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            Swal.fire('error', 'the end date must be greater than start date', 'error')\r\n            return;\r\n        } else if (title.trim().length < 2) {\r\n            setValidTitle(false);\r\n            return;\r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdated(values))\r\n        }else {\r\n            dispatch(eventStarAddNew(values))\r\n        }\r\n\r\n        setValidTitle(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            closeModal={closeModal}\r\n        >\r\n            <div className='container-title'>\r\n                <h1>{activeEvent ? 'Update Event' : 'New event'}</h1>\r\n            </div>\r\n\r\n            <form className='form' onSubmit={handleSubmit}>\r\n                <div className='form__group'>\r\n                    <label>Start date and time:</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className='form__input'\r\n                    />\r\n                </div>\r\n                <div className='form__group'>\r\n                    <label>End date and time:</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className='form__input'\r\n                    />\r\n                </div>\r\n                <div className='form__group'>\r\n                    <label>title and notes:</label>\r\n                    <input\r\n                        type='text'\r\n                        className={`form__input ${!validTitle && 'is-invalid'}`}\r\n                        placeholder='title'\r\n                        name='title'\r\n                        autoComplete='off'\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className='form__group'>\r\n                    <label>Small description:</label>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form__text-area\"\r\n                        placeholder=\"Notes\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                </div>\r\n\r\n                <button\r\n                    type='submit'\r\n                    className='form__button'\r\n                >\r\n                    <i className='far fa-save' ></i>\r\n                    Save\r\n                </button>\r\n            </form>\r\n\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\n\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCLick = () =>{\r\n        dispatch(eventClearActiveEvent());\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button className='btn-add btn-fab' onClick={handleCLick}>\r\n            <i className='fas fa-plus' ></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className='btn-delete fab__danger'\r\n            onClick={handleDelete}\r\n        >\r\n            <i className='fas fa-trash' ></i>\r\n            <span className='fab__span'>Delete event</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// import { messages } from '../../helpers/calendar-messages';\r\n\r\n// import 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n// moment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        // console.log(e)\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, startDate, endDate, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='calendar__container'>\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            {\r\n                activeEvent\r\n                &&\r\n                <DeleteEventFab />\r\n\r\n            }\r\n            <AddNewFab />\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import { Redirect, Route } from \"react-router-dom\"\r\n\r\nexport const PrivateRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n\r\n                (isLoggedIn)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/login' />\r\n            )\r\n            }\r\n        />\r\n    )\r\n}\r\n","import { Redirect, Route } from \"react-router-dom\"\r\n\r\nexport const PublicRoute = ({isLoggedIn, component:Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (!isLoggedIn)\r\n                ? <Component {...props} />\r\n                : <Redirect to='/' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { LoadingScreen } from '../components/ui/LoadingScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path='/login' component={LoginScreen} isLoggedIn={!!uid} />\r\n                    <PrivateRoute exact path='/' component={CalendarScreen} isLoggedIn={!!uid} />\r\n                    <Redirect to='/' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}